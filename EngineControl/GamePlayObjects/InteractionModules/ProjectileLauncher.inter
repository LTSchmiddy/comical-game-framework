class InterMod:
    def __init__(self, host):
        from dataManagers import counter
        import math
        self.host = host
        self.onScreenDesc = ""


        self.aimAngle = math.atan2(0, 1)
        if "aimAngle" in self.host.jsonArgs:
            self.aimAngle = math.radians(self.host.jsonArgs["aimAngle"])


        self.ticker = counter.TickCounter(90, True, False)
        if "freq" in self.host.jsonArgs:
            self.ticker = counter.TickCounter(self.host.jsonArgs["freq"], True, False)

        self.fireOrigin = [0, 0]
        if "fireOrigin" in self.host.jsonArgs:
            self.fireOrigin = self.host.jsonArgs["fireOrigin"]

        self.projectile = "BigCannonBall"
        if "projectile" in self.host.jsonArgs:
            self.projectile = self.host.jsonArgs["projectile"]

        self.mFlash = None
        if "mFlash" in self.host.jsonArgs:
            self.mFlash = self.host.jsonArgs["mFlash"]

        self.flashOrigin = [0, 0]
        if "flashOrigin" in self.host.jsonArgs:
            self.flashOrigin = self.host.jsonArgs["flashOrigin"]


        self.spread = 0
        if "spread" in self.host.jsonArgs:
            self.spread = self.host.jsonArgs["spread"]

        self.fireOriginWorld = [self.fireOrigin[0] + self.host.pos[0], self.fireOrigin[1] + self.host.pos[1]]
        self.flashOriginWorld = [self.flashOrigin[0] + self.host.pos[0], self.flashOrigin[1] + self.host.pos[1]]


    def onInteract(self):
        pass


    def onCollision(self):
        pass


    def onAIUpdate(self):
        self.fireOriginWorld = [self.fireOrigin[0] + self.host.pos[0], self.fireOrigin[1] + self.host.pos[1]]
        self.flashOriginWorld = [self.flashOrigin[0] + self.host.pos[0], self.flashOrigin[1] + self.host.pos[1]]

        if self.ticker.check():
            self.host.world.fireProjectile(self.fireOriginWorld, self.aimAngle, self.spread, self.projectile)

            if self.mFlash != None:
                self.host.world.fireProjectile(self.flashOriginWorld, self.aimAngle, 0, self.mFlash)
