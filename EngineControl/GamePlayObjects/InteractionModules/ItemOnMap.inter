

class InterMod:
    def __init__(self, host):
        import pygame

        self.host = host
        self.ItemID = self.host.jsonArgs["ItemID"]

        self.onScreenDesc = self.host.jsonArgs["PopUp"]

        self.emptyImg = pygame.image.load(self.host.jsonArgs["imagePath"])
        self.unclaimedImg = pygame.image.load(self.host.jsonArgs["imagePath"])
        self.itemImg = pygame.image.load(self.host.world.items[self.ItemID].imagePath)
        self.unclaimedImg.blit(self.itemImg, self.host.jsonArgs["ItemPos"])

        self.setPresentation()


        # self.default = False
        # if "default" in self.host.jsonArgs:
        #     self.default = self.host.jsonArgs["default"]

    def setPresentation(self):
        if not self.host.world.permenData.getEnvValue(self.host.label, "isTaken", False):
            self.host.image = self.unclaimedImg
            self.onScreenDesc = self.host.jsonArgs["PopUp"] + " " + self.host.world.items[self.ItemID].name
        else:
            self.host.image = self.emptyImg
            self.onScreenDesc = ""


    def onInteract(self):
        if not self.host.world.permenData.getEnvValue(self.host.label, "isTaken", False):
            self.host.world.permenData.setEnvValue(self.host.label, "isTaken", True)
            self.host.world.mainPlayer.addItem(self.ItemID, 1)
            self.host.audio.triggerSound("collect1")
        self.setPresentation()


    def onCollision(self):
        pass

    def onAIUpdate(self):
        pass